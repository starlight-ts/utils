name: Auto publish

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  Binaries:
    name: Build binaries v${{ matrix.node_version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[publish binaries]')
    strategy:
       matrix:
        node_version: [12, 13, 14]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    - name: Use Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Restore CI Yarn Cache
      id: yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Restore CI Rust Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Neon CLI
      run: yarn global add neon-cli
    - name: Install Dependencies
      run: yarn --ignore-scripts --frozen-lockfile
    - name: Publish Binaries
      run: yarn upload-binary
      env:
        NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

